# http://youtube.com/dataprofessor #
# http://github.com/dataprofessor  #
####################################
# Modified from Winston Chang,
# https://shiny.rstudio.com/gallery/shiny-theme-selector.html
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"rain forecasting",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
selectInput("districtnames","select the district",c("NONE",CHENNAI","NAMMAKAL","KACHEEPURAM","DHARMAPURI"),selectize = FALSE)
####################################
# Data Professor                   #
# http://youtube.com/dataprofessor #
# http://github.com/dataprofessor  #
####################################
# Modified from Winston Chang,
# https://shiny.rstudio.com/gallery/shiny-theme-selector.html
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"rain forecasting",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
selectInput("districtnames","select the district",c("NONE",CHENNAI","NAMMAKAL","KACHEEPURAM","DHARMAPURI"),selectize = FALSE)
####################################
# Data Professor                   #
# http://youtube.com/dataprofessor #
# http://github.com/dataprofessor  #
####################################
# Modified from Winston Chang,
# https://shiny.rstudio.com/gallery/shiny-theme-selector.html
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"rain forecasting",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
selectInput("districtnames","select the district",c("CHENNAI","NAMMAKAL","KACHEEPURAM","DHARMAPURI"),selectize = FALSE)
), # sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
# Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
####################################
# Data Professor                   #
# http://youtube.com/dataprofessor #
# http://github.com/dataprofessor  #
####################################
# Modified from Winston Chang,
# https://shiny.rstudio.com/gallery/shiny-theme-selector.html
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"rain forecasting",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
selectInput("districtnames","select the district",c("NONE","CHENNAI","NAMMAKAL","KACHEEPURAM","DHARMAPURI"),selectize = FALSE)
), # sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
# Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
####################################
# Data Professor                   #
# http://youtube.com/dataprofessor #
# http://github.com/dataprofessor  #
####################################
# Modified from Winston Chang,
# https://shiny.rstudio.com/gallery/shiny-theme-selector.html
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"rain forecasting",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
selectInput("districtnames","select the district",c("NONE","CHENNAI","NAMMAKAL","KACHEEPURAM","DHARMAPURI"),selectize = FALSE)
selectInput("stationnames","select the stations",c("NONE","CHENNAI","NAMMAKAL","KACHEEPURAM","DHARMAPURI"),selectize = FALSE)
####################################
# Data Professor                   #
# http://youtube.com/dataprofessor #
# http://github.com/dataprofessor  #
####################################
####################################
# Data Professor                   #
# http://youtube.com/dataprofessor #
# http://github.com/dataprofessor  #
####################################
# Modified from Winston Chang,
# https://shiny.rstudio.com/gallery/shiny-theme-selector.html
data=data.frame(District=c("Chennai","Chennai","Chennai","Kancheepuram","Kancheepuram","Kancheepuram","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Nammakkal","Nammakkal","Nammakkal","Nammakkal","Nammakkal","Sivagangai","Sivagangai","Sivagangai","Sivagangai","Sivagangai","Sivagangai"),
Station=c("Meenambakkam","Nungambakkam","Saidapet","Kancheepuram","Sriperumbudur","Uthiramerur","Dharmapuri-I","Dharmapuri-II","Harur","Palacode","Panchapalli","Pennagaram","Nammakkal","Paramathi","Rasipuram","Sendamangalam","Trichencode","Illayankudi","Karaikudi","Manamadurai","Sivagangai","Thiruppathur","Thirupuvanam"),
row.names = NULL)
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=",", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
ui=(fluidPage(
titlePanel("Analysis"),
selectInput("District","District",choices=unique(data$District)),
selectInput("Station","Station",choices="",selected=""),
))
server=shinyServer(function(session,input,output){
observeEvent(
input$District,
updateSelectInput(session,"Station","Station",
choices=data$Station[data$District==input$District])
)
})
shinyApp(ui,server)
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=",", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui=ui , server=server)
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui=ui , server=server)
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
library(shiny)
ui=shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
server=shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
library(shiny)
ui=shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
server=shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
library(shiny)
ui=shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
server=shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
data=data.frame(District=c("Chennai","Chennai","Chennai","Kancheepuram","Kancheepuram","Kancheepuram","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Nammakkal","Nammakkal","Nammakkal","Nammakkal","Nammakkal","Sivagangai","Sivagangai","Sivagangai","Sivagangai","Sivagangai","Sivagangai"),
Station=c("Meenambakkam","Nungambakkam","Saidapet","Kancheepuram","Sriperumbudur","Uthiramerur","Dharmapuri-I","Dharmapuri-II","Harur","Palacode","Panchapalli","Pennagaram","Nammakkal","Paramathi","Rasipuram","Sendamangalam","Trichencode","Illayankudi","Karaikudi","Manamadurai","Sivagangai","Thiruppathur","Thirupuvanam"),
row.names = NULL)
library(shiny)
ui=(fluidPage(
titlePanel("Analysis"),
selectInput("District","District",choices=unique(data$District)),
selectInput("Station","Station",choices="",selected=""),
))
server=shinyServer(function(session,input,output){
observeEvent(
input$District,
updateSelectInput(session,"Station","Station",
choices=data$Station[data$District==input$District])
)
})
shinyApp(ui,server)
library(shiny)
ui=shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
server=shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
getwd()
install.packages("rsconnect")
library(rsconnect)
rsconnect::deployApp('C:\Users\sadish\OneDrive\Desktop\work')
rsconnect::deployApp('C:\Users\sadish\OneDrive\Desktop\work')
rsconnect::deployApp('C:\Users\sadish\OneDrive\Desktop\work')
install.packages("tseries")
library("tseries")
library("tseries")
install.packages("xts")
install.packages("tseries")
library("tseries")
library(tseries)
library(tseries)
adf.test(x1)
setwd("C:/Users/sadish/OneDrive/Desktop/work")
df<-read.csv("NAM_RASIPURAM.csv")
setwd("C:/Users/sadish/OneDrive/Desktop/work")
df<-read.csv("NAM_RASIPURAM.csv")
setwd("C:/Users/sadish/OneDrive/Desktop/work/NAMMAKKAL")
list.files()
df<-read.csv("NAM_RASIPURAM.csv")
A=c(df$JAN,df$FEB)
setwd("C:/Users/sadish/OneDrive/Desktop/work")
setwd("C:/Users/sadish/OneDrive/Desktop/work/NAMMAKKAL")
df<-read.csv("NAM_RASIPURAM.csv")
df
x1<-ts(df)
library(tseries)
adf.test(x1)
adf.test(x1)
x1<-ts(df)
X1<-ts(df)
adf.test(X1)
s1=c(df$JAN,df$FEB)
s1
s1.remove(NaN)
s1.isnull()
s1
X1<-ts(s1)
library(tseries)
adf.test(X1)
s1 <- na.omit(s1)
s1
s1
s=c(df$JAN,df$FEB)
s
s1 <- na.omit(s)
s1
X1<-ts(s1)
library(tseries)
adf.test(X1)
acf(X1)
pacf(X1)
plot(X1.ts)
plot(X1)
