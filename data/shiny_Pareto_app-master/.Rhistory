)
)
))
ui=(fluidPage(
titlePanel("Analysis"),
selectInput("District","District",choices=unique(data$District)),
selectInput("Station","Station",choices="",selected=""),
))
server=shinyServer(function(session,input,output){
observeEvent(
input$District,
updateSelectInput(session,"Station","Station",
choices=data$Station[data$District==input$District])
)
})
shinyApp(ui,server)
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=",", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui=ui , server=server)
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui=ui , server=server)
library(shiny)
library(shinydashboard)
shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
library(shiny)
ui=shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
server=shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
library(shiny)
ui=shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
server=shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
library(shiny)
ui=shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
server=shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
data=data.frame(District=c("Chennai","Chennai","Chennai","Kancheepuram","Kancheepuram","Kancheepuram","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Dharmapuri","Nammakkal","Nammakkal","Nammakkal","Nammakkal","Nammakkal","Sivagangai","Sivagangai","Sivagangai","Sivagangai","Sivagangai","Sivagangai"),
Station=c("Meenambakkam","Nungambakkam","Saidapet","Kancheepuram","Sriperumbudur","Uthiramerur","Dharmapuri-I","Dharmapuri-II","Harur","Palacode","Panchapalli","Pennagaram","Nammakkal","Paramathi","Rasipuram","Sendamangalam","Trichencode","Illayankudi","Karaikudi","Manamadurai","Sivagangai","Thiruppathur","Thirupuvanam"),
row.names = NULL)
library(shiny)
ui=(fluidPage(
titlePanel("Analysis"),
selectInput("District","District",choices=unique(data$District)),
selectInput("Station","Station",choices="",selected=""),
))
server=shinyServer(function(session,input,output){
observeEvent(
input$District,
updateSelectInput(session,"Station","Station",
choices=data$Station[data$District==input$District])
)
})
shinyApp(ui,server)
library(shiny)
ui=shinyUI(fluidPage(
headerPanel( title= "uploaded the file"),
sidebarLayout(
sidebarPanel(
fileInput("file","upload the file"),
h5(" upload the file here"),
radioButtons("sep","seperator", choices = c(comma=',', Period=".", Tilde="~",minus="-")),
checkboxInput("header","Header?")
),
mainPanel(
tableOutput("input_file")
)
)
))
server=shinyServer(function(input, output) {
output$input_file= renderTable({
file_to_read = input$file
if(is.null(file_to_read)){
return()
}
read.table(file_to_read$datapath, sep = input$sep, header=input$header)
}
)
})
shinyApp(ui , server)
getwd()
install.packages("rsconnect")
library(rsconnect)
rsconnect::deployApp('C:\Users\sadish\OneDrive\Desktop\work')
rsconnect::deployApp('C:\Users\sadish\OneDrive\Desktop\work')
rsconnect::deployApp('C:\Users\sadish\OneDrive\Desktop\work')
getwd()
setwd("C:/Users/sadish/OneDrive/Desktop/work")
ef1<-read.csv("dates-1.csv")
ef2<-read.csv("dates-2.csv")
ef3<-read.csv("dates-3.csv")
ef4<-read.csv("dates-4.csv")
setwd("C:/Users/sadish/OneDrive/Desktop/work/CHENNAI")
list.files()
df<-read.csv("CH_NUNGAMBAKKAM.csv")
A=c(df$JAN,df$FEB)
B=c(df$MAR,df$APR,df$MAY)
C=c(df$JUN,df$JUL,df$AUG,df$SEP)
D=c(df$OCT,df$NOV,df$DEC)
S1=cbind(ef1$S1,c(df$JAN,df$FEB))
S2=cbind(ef2$S2,c(df$MAR,df$APR,df$MAY))
S3=cbind(ef3$S3,c(df$JUN,df$JUL,df$AUG,df$SEP))
S4=cbind(ef4$S4,c(df$OCT,df$NOV,df$DEC))
PTA=C[48]-C[43]
# check the season 2 (mar,apr,may= premonsoon) and season 4 (oct,nov,dec = Post monsoon)
x1<-B
y1<-D
plot(x1,(y1))
ggplot(peryear %>% aes(x=B,y=cumsum(D))) + geom_point()+geom_line()
getwd()
setwd("C:/Users/sadish/OneDrive/Desktop/work")
Data<-read.csv("dummy.csv")
library(rsconnect)
library(shiny)
ui=shinydashboard::dashboardSidebar(
titlePanel("Analysis"),
sidebarLayout(
sidebarPanel(
selectInput("District","District",choices=Data$District),
selectInput("Station","Station",choices="",selected=""),
selectInput("Month","Select Month",choices=colnames(Data[,4:15]),selected = ""),
selectInput("StartDate","Select Start Date",choices = Data$DATE,selected = "1"),
selectInput("EndDate","Select End Date",choices = Data$DATE,selected = "31"),
),
mainPanel(
tableOutput("GivenData"),
tableOutput("PentaData"),
tableOutput("Date")
))
)
server=shinyServer(function(session,input,output)
{
observeEvent(
input$District,
updateSelectInput(session,"Station","Station",
choices=Data$Station[Data$District==input$District])
)
output$GivenData<-renderTable({
Stationfilter<-subset(Data,Data$Station==input$Station)
})
output$Date<-renderTable({
Data
})
observeEvent(
input$Month,
output$PentaData<-renderTable({
Monthfilter<-subset(Data,colnames(Data[,4:15])==input$Month)
})
)
})
shinyApp(ui,server)
library(shinydashboard)
library(shiny)
getwd()
setwd("C:/Users/sadish/OneDrive/Desktop/work/shiny_Pareto_app-master")
#Data<-read.csv("Failure_pareto.csv")
#Data
ui <-dashboardPage(
dashboardHeader(title  ="Rainforecasting Analysis Dashboard", titleWidth = 600),
dashboardSidebar(
sidebarMenu(
menuItem("About", tabName = "aboutTab",icon = icon("dashboard")),
menuItem("Data Loading", tabName = "loadTab", icon = icon("upload")),
menuItem("Dashboard", tabName = "dashTab",icon = icon("dashboard")),
menuItem("Summary Stats", tabName = "summaryTab",icon = icon("bar-chart")),
menuItem("Inspect the Data", tabName = "dataTab",icon = icon("th"))
)# end of sidebarMenu
),# end of dashboardSidebar
dashboardBody(
tabItems(
# Dashboard tab content
tabItem(tabName = "aboutTab",
h2("Rain forecasting Analysis"),
h6("(Note: 50/6, College Road, Adjacent Women's Christian College, Nungambakkam, Chennai, Tamil Nadu 600006)"),
tags$hr(),
#p("Systematic meteorological observations in Chennai started much earlier than the actual establishment of the India Meteorological Department in 1875. The city is home to one of the first modern astronomical and meteorological observatory in the East, established at Egmore before 1792.[2] The Madras Observatory, as it was known then, was established by Sir Charles Oakeley, the then Governor of Madras under the East India Company, in 1792 "for promoting the knowledge of Astronomy, Geography and Navigation in India", marking the beginning of the history of Regional Meteorological Centre, Chennai. Oakeley was supported by William Petrie, a member of the Madras Government, who had built an astronomical observatory at his own expense 5 years earlier in 1786. The primary purpose of the observatory was to spread astronomy among the masses, rather than weather observation"),
p("The 15-feet tall granite pillar monument weighing 10 tons, which carried the original transit equipment, is still preserved and carries the name of the architect, Michael Topping Arch, and the year AD MDCCXCII. Inscriptions in Tamil and Telugu were carved on the pillar in order that posterity may be informed a thousand years hence of the period when the mathematical sciences were first planted by British liberality in Asia".[2][4] J. Goldingham, FRS, became the first astronomer of the observatory, who started recording the meteorological observations in 1796."),
library(shinydashboard)
library(shiny)
getwd()
setwd("C:/Users/sadish/OneDrive/Desktop/work/shiny_Pareto_app-master")
#Data<-read.csv("Failure_pareto.csv")
#Data
ui <-dashboardPage(
dashboardHeader(title  ="Rainforecasting Analysis Dashboard", titleWidth = 600),
dashboardSidebar(
sidebarMenu(
menuItem("About", tabName = "aboutTab",icon = icon("dashboard")),
menuItem("Data Loading", tabName = "loadTab", icon = icon("upload")),
menuItem("Dashboard", tabName = "dashTab",icon = icon("dashboard")),
menuItem("Summary Stats", tabName = "summaryTab",icon = icon("bar-chart")),
menuItem("Inspect the Data", tabName = "dataTab",icon = icon("th"))
)# end of sidebarMenu
),# end of dashboardSidebar
dashboardBody(
tabItems(
# Dashboard tab content
tabItem(tabName = "aboutTab",
h2("Rain forecasting Analysis"),
h6("(Note: 50/6, College Road, Adjacent Women's Christian College, Nungambakkam, Chennai, Tamil Nadu 600006)"),
tags$hr(),
#p("Systematic meteorological observations in Chennai started much earlier than the actual establishment of the India Meteorological Department in 1875. The city is home to one of the first modern astronomical and meteorological observatory in the East, established at Egmore before 1792.[2] The Madras Observatory, as it was known then, was established by Sir Charles Oakeley, the then Governor of Madras under the East India Company, in 1792 "for promoting the knowledge of Astronomy, Geography and Navigation in India", marking the beginning of the history of Regional Meteorological Centre, Chennai. Oakeley was supported by William Petrie, a member of the Madras Government, who had built an astronomical observatory at his own expense 5 years earlier in 1786. The primary purpose of the observatory was to spread astronomy among the masses, rather than weather observation"),
#p("The 15-feet tall granite pillar monument weighing 10 tons, which carried the original transit equipment, is still preserved and carries the name of the architect, Michael Topping Arch, and the year AD MDCCXCII. Inscriptions in Tamil and Telugu were carved on the pillar in order that posterity may be informed a thousand years hence of the period when the mathematical sciences were first planted by British liberality in Asia".[2][4] J. Goldingham, FRS, became the first astronomer of the observatory, who started recording the meteorological observations in 1796."),
#p("In 1840, Captain S. O. E. Ludlow began recording meteorological observations on an hourly basis. In 1855, William Stephen Jacob of the East India Observatory in Madras found orbital anomalies in the binary star 70 Ophiuchi that he claimed are evidence of an extrasolar planet—the first exoplanet false alarm. The discovery began a 140-year period of other exoplanet discovery false alarms, although no actual planets were discovered."),
fluidRow(
#box(width = 12, plotOutput("plot1", height = 250))#,
)# End of fluidRow
),
#Data loading Tab content
tabItem(tabName = "loadTab",
h2("Select input dataset:"),
fileInput(
"file1","Upload an csv file",accept = ".csv"
),
p("After uploading your CSV file, click on the 'Inspect the Data' tab")
),# End of Data loading Tab
# Dashboard tab content
tabItem(tabName = "dashTab",
h2("Rain forecasting Analysis"),
h6("(Note: The Pareto plot will be presented once you load a dataset in the 'Data Loading' tab)"),
tags$hr(),
p("Pareto analysis is a formal technique useful where many possible courses of action are competing for attention."),
p("The barplot below may be useful to define which causes should be addressed first."),
p("Usually a good starting point is the 80/20 Rule that states that most of the results in any situation (80% actually) are determined by a  small number of causes (20% of all the causes)"),
fluidRow(
box(width = 12, plotOutput("plot1", height = 250))#,
)# End of fluidRow
),
# Summary Stats tab content
tabItem(tabName = "summaryTab",
h2("Summary Statistics"),
verbatimTextOutput("summary")
),
# Data tab content
tabItem(tabName = "dataTab",
h2("Inspect the data"),
p("Here is the raw data from the xlsx file"),
tableOutput('contents')
)
)# End of tabItems
)
)
# check if pkgs are installed already, if not, install automatically:
# (http://stackoverflow.com/a/4090208/1036500)
list.of.packages <- c("shiny",
"dplyr",
"shinydashboard",
"ggplot2",
"ggrepel",
"readxl",
"DT")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# load all packages
lapply(list.of.packages, require, character.only = TRUE)
server <- function(input, output) {
# read in the excel file
#req(input$file1)
the_data_fn <- reactive({
req(input$file1)
dat <- read_xlsx(input$file1$datapath,sheet = 1)
return(dat)
})# end of reading file
#display a pareto plot
output$plot1 <- renderPlot({
dat <- the_data_fn()
dat <-dat[order(dat$N,decreasing = TRUE),]
myDf <-data.frame(count = dat$N,failure= dat$failure, stringsAsFactors = FALSE)
myDf<- myDf %>% as_tibble() %>% mutate(
cumulative = cumsum(count),
freq = round(count / sum(count),3)*100,
cum_freq = cumsum(freq)
)
myDf[dim(myDf)[1],dim(myDf)[2]] <- 100 #force last level
pareto <- ggplot(myDf, aes(x=reorder(failure,-count),y=count)) +
geom_bar(aes(y=myDf$count), fill='blue', stat="identity") +
geom_point(aes(y=myDf$cumulative), color = rgb(0, 1, 0), pch=16, size=3) +
geom_path(aes(y=myDf$cumulative, group=1)) +
theme(axis.text.x = element_text(size = 12,angle=90, vjust=0.6)) +
labs(title = "Failure Pareto Plot",
subtitle = "Produced by David Arteta",
x = 'Failures', y = 'Cumulative Count')
pareto + geom_label_repel(aes(label= myDf$cum_freq, y = myDf$cumulative),
box.padding = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
})# end of renderPlot
# display a table with the cumulative values
output$summary <-renderPrint({
dat <- the_data_fn()
dat <-dat[order(dat$N,decreasing = TRUE),]
myDf <-data.frame(count = dat$N,failure= dat$failure, stringsAsFactors = FALSE)
myDf<- myDf %>% as_tibble() %>% mutate(
cumsum = cumsum(count),
freq = round(count / sum(count),3)*100,
cum_freq = cumsum(freq)
)
myDf[dim(myDf)[1],dim(myDf)[2]] <- 100 #force last level
return(myDf)
})# end of renderPrint
# display a table of the file contents
output$contents <- renderTable({
the_data_fn()
})# End of renderTable
}
shinyApp(ui = ui, server = server)
